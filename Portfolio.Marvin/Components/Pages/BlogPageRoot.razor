@page "/blogs/{*RelativePath}"
@using Microsoft.AspNetCore.Html
@using Portfolio.Marvin.Components.Common
@using Portfolio.Marvin.Models.Blogs
@using Portfolio.Marvin.Providers.Interfaces

@inject IBlogProvider BlogProvider
@inject NavigationManager NavigationManager

@if (_initialized && _blogPage is not null)
{
   <div class="page">
      <h1>@_blogPage.Meta.Title</h1>
      <div class="content">
         <div class="markdown">
            @(new MarkupString(_blogPage.Content))
         </div>
         <div class="info">
            <div class="image-wrapper">
               <img src="@_blogPage.Meta.Image" loading="lazy" alt="..." />
            </div>
            <div class="tags">
               @foreach (var tag in _blogPage.Meta.Tags)
               {
                  <div class="tag">@tag</div>
               }
            </div>
            <div>
               <TechnologyList Kinds="@_blogPage.Meta.Technologies" />
            </div>
         </div>
      </div>
   </div>
}

@code {
   
   [Parameter]
   public string? RelativePath { get; set; }

   private BlogPage? _blogPage;
   private bool _initialized;
   
   protected override async Task OnInitializedAsync()
   {
      _blogPage = await BlogProvider.GetPage(RelativePath ?? string.Empty);
      _initialized = true;

      if (_blogPage is null)
      {
         NavigationManager.NavigateTo("/not-found");
      }
   }

}