@page "/blog"
@using Me.Memory.Extensions
@using Portfolio.Marvin.Components.Blogs
@using Portfolio.Marvin.Components.Common
@using Portfolio.Marvin.Models.Blogs
@using Portfolio.Marvin.Providers.Interfaces

@inject IBlogProvider BlogProvider

<PageTitle>Marvin Drude - Blog Overview</PageTitle>
<HeadContent>
   <MetaInfo 
      Title="Marvin Drude - Blog Overview"
      Description="Articles of Marvin Drude - Senior Full Stack Developer"
      Keywords="Marvin Drude, Portfolio, C#, .NET, Software Developer"
      SiteName="Marvin Drude"
      ImageUrl="/brand.webp"
      Type="website"
   />
</HeadContent>

<div class="page">
   <h1>Articles</h1>
   <div class="content">
      <div class="articles">
         @foreach (var page in _pages)
         {
            <BlogPagePreview Page="page"/>
         }
      </div>
      <div class="filter">
         <div class="tags">
            @foreach (var tag in _tags)
            {
               <div class="tag @(tag == _filter.Tag ? "active" : "")" @onclick="@(() => OnTagClicked(tag))">@tag</div>
            }
         </div>
      </div>
   </div>
</div>

@code {

   private List<BlogPage> _pages = [];
   private List<string> _tags = [];

   private readonly GetPagesFilter _filter = new ()
   {
      Tag = null,
      PageIndex = 0,
      PageSize = 12
   };
   
   protected override async Task OnInitializedAsync()
   {
      var refreshTask = RefreshPages();
      var tagsTask = BlogProvider.GetTags();
      
      _tags = await tagsTask;
      await refreshTask;
   }

   private async Task OnTagClicked(string tag)
   {
      if (tag == _filter.Tag)
      {
         await OnChangeTagSelected(null);
         return;
      }

      await OnChangeTagSelected(tag);
   }
   
   private async Task OnChangeTagSelected(string? tag)
   {
      _filter.Tag = tag;
      _filter.PageIndex = 0;

      await RefreshPages();
   }
   
   private async Task RefreshPages()
   {
      _pages = await BlogProvider.GetPages(_filter);
   }
}