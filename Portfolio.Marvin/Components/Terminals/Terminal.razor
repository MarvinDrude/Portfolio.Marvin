@using Portfolio.Marvin.Components.Common

@inject IJSRuntime JsRuntime

<div class="terminal" @onclick="@OnClickInsideTerminal">
   <div class="bar">
      <div class="left">
         <div class="tab">
            <span>New Terminal Window</span>
         </div>
      </div>
      <div class="right">
         <div class="btn"><SvgIcon Name="minimize" /></div>
         <div class="btn"><SvgIcon Name="maximize" /></div>
         <div class="btn"><SvgIcon Name="close" /></div>
      </div>
   </div>
   <div class="body" @ref="@_bodyRef">
      <div class="history">
      @foreach (var line in _lines)
      {
         <pre class="line">@line</pre>
      }
      </div>
      <div class="input">
         <span>&gt; </span>
         <input 
            @ref="@_textAreaRef" 
            @bind="@_input" 
            @bind:event="oninput"
            @onkeydown="@OnKeyDown" 
            type="text"
            id="console-input" rows="1"
            autocomplete="off" 
            autocorrect="off" 
            autocapitalize="off" 
            spellcheck="false" />
      </div>
   </div>
</div>

@code {

   private ElementReference _textAreaRef;
   private ElementReference _bodyRef;
   
   private List<string> _lines = [];
   private int _maxLines = 300;

   private string? _input;

   protected override Task OnInitializedAsync()
   {
      Reset();
      return base.OnInitializedAsync();
   }

   private async Task OnClickInsideTerminal()
   {
      await _textAreaRef.FocusAsync();
   }

   private async Task OnKeyDown(KeyboardEventArgs args)
   {
      if (args.Key != "Enter") return;
      
      _lines.Add(_input ?? " ");
      _input = "";
      
      await InvokeAsync(StateHasChanged);
      await ScrollToBottom();
   }

   private void Reset()
   {
      _lines = [];
      _lines.AddRange(
         "Welcome to PortfolioOS v1.0",
         " ",
         @" __  __                  _       ",
         @"|  \/  | __ _ _ ____   _(_)_ __  ",
         @"| |\/| |/ _` | '__\ \ / / | '_ \ ",
         @"| |  | | (_| | |   \ V /| | | | |",
         @"|_|  |_|\__,_|_|    \_/ |_|_| |_|",
         " ",
         "Type 'help' to see available commands.");
   }

   private async Task ScrollToBottom()
   {
      await JsRuntime.InvokeVoidAsync("scrollToBottom", _bodyRef);
   }
}